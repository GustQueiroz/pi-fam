generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  products  Product[]
  sales     Sale[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  phone     String?
  photo     String? 
  role      String
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales     Sale[]

  @@index([tenantId])
}

model Product {
  id        String   @id @default(cuid())
  name      String
  quantity  Int      @default(0)
  price     Float    @default(0)
  cost      Float    @default(0)
  image     String?  
  status    String 
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  saleItems SaleItem[]

  @@index([tenantId])
}

model Sale {
  id          String    @id @default(cuid())
  clientName  String
  clientPhone String?
  total       Float
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  tenantId    String
  tenant      Tenant    @relation(fields: [tenantId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  items       SaleItem[]

  @@index([userId])
  @@index([tenantId])
}

model SaleItem {
  id        String   @id @default(cuid())
  quantity  Int
  price     Float
  saleId    String
  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id])

  @@index([saleId])
  @@index([productId])
}

